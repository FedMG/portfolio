{
  "compilerOptions": {
    // "target": "ES2022",
    // "lib": ["esnext"],
    // "module": "esnext",
    "target": "es2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "module": "commonjs" /* Specify what module code is generated. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "strictFunctionTypes": true,
    "noImplicitAny": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "paths": {
      "@/*": ["./src/*"]
    },
    "moduleResolution": "Node",
    "baseUrl": ".",
    "allowJs": true
    // "noEmit": true,
    // "rootDir": "./",                                  /* Specify the root folder within your source files. */
    // "incremental": true                                  /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
    // "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
  },
  "include": ["utilities.d.ts", "**/*.ts", "**/*.tsx"],
  "exclude": ["node_modules"]
}
